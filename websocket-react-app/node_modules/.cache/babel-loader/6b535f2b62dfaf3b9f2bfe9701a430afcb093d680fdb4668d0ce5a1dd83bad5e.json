{"ast":null,"code":"var _jsxFileName = \"/Users/nedjamta/development/github-nedspnt/go-websocket/websocket-react-app/src/WebSocketComponent.js\",\n  _s = $RefreshSig$();\n// WebSocketComponent.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [websocket, setWebsocket] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Connect to the WebSocket server\n    const ws = new WebSocket('ws://localhost:8080/ws');\n\n    // Set up event listeners\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    ws.onmessage = event => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessage(receivedMessage);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket closed');\n    };\n\n    // Save the WebSocket connection in state\n    setWebsocket(ws);\n\n    // Clean up on component unmount\n    return () => {\n      ws.close();\n    };\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  const sendMessage = () => {\n    // Send a JSON message to the server\n    const messageObject = {\n      text: 'Hello, server!'\n    };\n    websocket.send(JSON.stringify(messageObject));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Received message from server: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"+i5iKTLDd4np1eLBnqLGVMABucI=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WebSocketComponent","_s","websocket","setWebsocket","message","setMessage","ws","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","onclose","close","sendMessage","messageObject","text","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nedjamta/development/github-nedspnt/go-websocket/websocket-react-app/src/WebSocketComponent.js"],"sourcesContent":["// WebSocketComponent.js\nimport React, { useEffect, useState } from 'react';\n\nconst WebSocketComponent = () => {\n  const [websocket, setWebsocket] = useState(null);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    // Connect to the WebSocket server\n    const ws = new WebSocket('ws://localhost:8080/ws');\n\n    // Set up event listeners\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    ws.onmessage = (event) => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessage(receivedMessage);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket closed');\n    };\n\n    // Save the WebSocket connection in state\n    setWebsocket(ws);\n\n    // Clean up on component unmount\n    return () => {\n      ws.close();\n    };\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  const sendMessage = () => {\n    // Send a JSON message to the server\n    const messageObject = { text: 'Hello, server!' };\n    websocket.send(JSON.stringify(messageObject));\n  };\n\n  return (\n    <div>\n      <h1>WebSocket Example</h1>\n      <p>Received message from server: {message}</p>\n      <button onClick={sendMessage}>Send Message</button>\n    </div>\n  );\n};\n\nexport default WebSocketComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;;IAElD;IACAD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC9CX,UAAU,CAACQ,eAAe,CAAC;IAC7B,CAAC;IAEDP,EAAE,CAACW,OAAO,GAAG,MAAM;MACjBR,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC;;IAED;IACAP,YAAY,CAACG,EAAE,CAAC;;IAEhB;IACA,OAAO,MAAM;MACXA,EAAE,CAACY,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,aAAa,GAAG;MAAEC,IAAI,EAAE;IAAiB,CAAC;IAChDnB,SAAS,CAACoB,IAAI,CAACR,IAAI,CAACS,SAAS,CAACH,aAAa,CAAC,CAAC;EAC/C,CAAC;EAED,oBACErB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B7B,OAAA;MAAAyB,QAAA,GAAG,gCAA8B,EAACpB,OAAO;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9C7B,OAAA;MAAQ8B,OAAO,EAAEV,WAAY;MAAAK,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA5CID,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AA8CxB,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}